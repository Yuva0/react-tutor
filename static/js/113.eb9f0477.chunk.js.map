{"version":3,"file":"static/js/113.eb9f0477.chunk.js","mappings":"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","sources":["content/FunctionComponent.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Breadcrumbs,\n  BreadcrumbsItem,\n  SideBar,\n  SideBarItem,\n  Text,\n  CodeDisplay,\n  List,\n  ListItem,\n} from \"stelios\";\nimport {\n  StyledMain,\n  StyledSection,\n  StyledSubsection,\n  StyledTopicContent,\n} from \"../components/StyledInternalComponents/StyledInternalComponents\";\nimport { useWindowSize } from \"../helpers/helpers\";\n\nconst sectionsID = [\n  \"introduction\",\n  \"definition\",\n  \"props\",\n  \"stateless-vs-stateful\",\n  \"using-hooks\",\n  \"props-and-hooks\",\n];\n\nconst INTRODUCTION = `In React, a FunctionComponent (also known as a functional component) is a simpler way to write components using JavaScript functions. Unlike class components, which are defined using ES6 classes, functional components are defined as plain JavaScript functions.`;\nconst DEFINITION = `A FunctionComponent is defined as a JavaScript function that takes props as an argument and returns React elements (JSX). Here is an example of a basic functional component:`;\nconst PROPS = `Props are passed to a FunctionComponent as an argument. The props object contains all the data passed from the parent component. You can access these props and use them within your component:`;\nconst STATELESS_VS_STATEFUL = `Functional components are also known as stateless components because they do not have state or lifecycle methods. Before the introduction of hooks, functional components were limited to rendering UI based on props passed to them. With the introduction of hooks, functional components can now have state and lifecycle methods, making them more powerful and versatile.`;\nconst DEFINITION_EXAMPLE = `import React from 'react';\n\nfunction MyComponent(props) {\n  return <div> Hello, {props.name}! </div>;\n}\n\nexport default MyComponent;\n`;\nconst PROPS_EXAMPLE = `function Greeting(props) {\n  return <h1>Hello, {props.name}!</h1>;\n}\n`;\nconst PROPS_DESTRUCTURING = `You can also use destructuring to directly access specific props:`;\nconst PROPS_DESTRUCTURING_EXAMPLE = `function Greeting({ name }) {\n  return <h1>Hello, {name}!</h1>;\n}\n`;\nconst USING_HOOKS = (\n  <>\n    <Text variant=\"paragraph\">\n      React Hooks allow functional components to have state and other features\n      previously available only in class components. Here are some common hooks:\n    </Text>\n    <List>\n      <ListItem>\n        <b>useState:</b> Adds state to a functional component.\n      </ListItem>\n      <ListItem>\n        <b>useEffect:</b> Performs side effects in functional components\n      </ListItem>\n    </List>\n  </>\n);\nconst USE_STATE_EXAMPLE = `import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n`;\nconst USE_EFFECT_EXAMPLE = `import React, { useEffect } from 'react';\n\nfunction Timer() {\n  useEffect(() => {\n    const timer = setInterval(() => {\n      console.log('Tick');\n    }, 1000);\n\n    // Cleanup function\n    return () => clearInterval(timer);\n  }, []); // Empty array means this effect runs once after the initial render\n\n  return <div>Check the console for ticks.</div>;\n}\n`;\nconst PROPS_HOOKS_EXAMPLE = `import React, { useState } from 'react';\n\nfunction UserProfile({ userName }) {\n  const [likes, setLikes] = useState(0);\n\n  return (\n    <div>\n      <h1>{userName}'s Profile</h1>\n      <p>Likes: {likes}</p>\n      <button onClick={() => setLikes(likes + 1)}>Like</button>\n    </div>\n  );\n}\n\nexport default UserProfile;\n`;\nconst PROPS_HOOKS_1 = `In this example, UserProfile is a functional component that takes userName as a prop and manages the likes state using the useState hook.`;\nconst PROPS_HOOKS_2 = `In summary, FunctionComponents in React are a more modern and concise way to define components. With the addition of hooks, they can handle complex logic and state management, making them a versatile choice for building React applications.`;\n\nconst FunctionComponent = () => {\n  const [sidebarSelected, setSidebarSelected] = React.useState(\"introduction\");\n  const [isMounted, setIsMounted] = React.useState(false);\n  const { width } = useWindowSize();\n  const mobile = width < 1200;\n\n  React.useEffect(() => {\n    const handleIntersection = (entries: IntersectionObserverEntry[]) => {\n      for (const entry of entries) {\n        if (entry.isIntersecting) {\n          setSidebarSelected(entry.target.id);\n          break;\n        }\n      }\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 1,\n      rootMargin: \"64px\",\n    });\n\n    const sections = sectionsID.map((id) => document.getElementById(id));\n    sections.forEach((section) => {\n      if (!section) return;\n      return observer.observe(section);\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  });\n  React.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  const onSideBarItemClick = (id: string) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    }\n  };\n\n  if (!isMounted) return <StyledMain>{null}</StyledMain>;\n  return (\n    <StyledMain id=\"styled-main\">\n      <StyledTopicContent\n        className={isMounted ? \"fade-in\" : \"\"}\n        style={{ width: mobile ? \"100%\" : \"calc(100% - 12rem\" }}\n      >\n        <StyledSection id=\"introduction\">\n          <StyledSubsection>\n            <Breadcrumbs size=\"small\" color=\"primary\" delimiter=\"/\">\n              <BreadcrumbsItem title=\"Components\" />\n              <BreadcrumbsItem\n                link=\"/components/function-component\"\n                title=\"Function Component\"\n              />\n            </Breadcrumbs>\n            <Text\n              variant=\"paragraph\"\n              size=\"large\"\n              style={{ marginTop: \"1rem\" }}\n            >\n              Introduction\n            </Text>\n            <Text>{INTRODUCTION}</Text>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection id=\"definition\">\n          <StyledSubsection>\n            <Text variant=\"paragraph\" size=\"large\">\n              Definition\n            </Text>\n            <Text>{DEFINITION}</Text>\n            <CodeDisplay language=\"JSX\" text={DEFINITION_EXAMPLE} />\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection>\n          <StyledSubsection id=\"props\">\n            <Text variant=\"paragraph\" size=\"large\">\n              Props\n            </Text>\n            <Text>{PROPS}</Text>\n            <CodeDisplay language=\"JSX\" text={PROPS_EXAMPLE} />\n            <Text style={{ marginTop: \"0.5rem\" }}>{PROPS_DESTRUCTURING}</Text>\n            <CodeDisplay language=\"JSX\" text={PROPS_DESTRUCTURING_EXAMPLE} />\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection>\n          <StyledSubsection id=\"stateless-vs-stateful\">\n            <Text variant=\"paragraph\" size=\"large\">\n              Stateless vs Stateful\n            </Text>\n            <Text>{STATELESS_VS_STATEFUL}</Text>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection>\n          <StyledSubsection id=\"using-hooks\">\n            <Text variant=\"paragraph\" size=\"large\">\n              Using Hooks\n            </Text>\n            {USING_HOOKS}\n            <Text\n              variant=\"paragraph\"\n              style={{ marginTop: \"0.5rem\", scrollMarginTop: \"4rem\" }}\n              id=\"use-state-example\"\n            >\n              useState Example\n            </Text>\n            <CodeDisplay language=\"JSX\" text={USE_STATE_EXAMPLE} />\n            <Text\n              variant=\"paragraph\"\n              style={{ marginTop: \"0.75rem\", scrollMarginTop: \"4rem\" }}\n              id=\"use-effect-example\"\n            >\n              useEffect Example\n            </Text>\n            <CodeDisplay language=\"JSX\" text={USE_EFFECT_EXAMPLE} />\n            <Text\n              variant=\"paragraph\"\n              size=\"large\"\n              style={{ marginTop: \"0.75rem\", scrollMarginTop: \"4rem\" }}\n              id=\"advantages\"\n            >\n              Advantages\n            </Text>\n            <List variant=\"unordered\">\n              <ListItem>\n                <b>Simplicity:</b> Functional components are simpler and easier\n                to read and test.\n              </ListItem>\n              <ListItem>\n                <b>Performance:</b> They can be more performant because they\n                avoid the overhead associated with class components.\n              </ListItem>\n              <ListItem>\n                <b>Hooks:</b> With hooks, functional components can now manage\n                state and side effects, making them powerful and flexible.\n              </ListItem>\n            </List>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection>\n          <StyledSubsection id=\"props-and-hooks\">\n            <Text variant=\"paragraph\" size=\"large\">\n              Example with Props and Hooks\n            </Text>\n            <CodeDisplay language=\"JSX\" text={PROPS_HOOKS_EXAMPLE} />\n            <Text variant=\"paragraph\" style={{ marginTop: \"0.75rem\" }}>\n              {PROPS_HOOKS_1}\n            </Text>\n            <Text variant=\"paragraph\">{PROPS_HOOKS_2}</Text>\n          </StyledSubsection>\n        </StyledSection>\n      </StyledTopicContent>\n      {!mobile && (\n        <SideBar\n          top=\"6rem\"\n          right=\"4rem\"\n          style={{ background: \"transparent\", position: \"fixed\" }}\n        >\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"introduction\"}\n            onClick={() => {\n              onSideBarItemClick(\"introduction\");\n            }}\n          >\n            Introduction\n          </SideBarItem>\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"definition\"}\n            onClick={() => {\n              onSideBarItemClick(\"definition\");\n            }}\n          >\n            Definition\n          </SideBarItem>\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"props\"}\n            onClick={() => {\n              onSideBarItemClick(\"props\");\n            }}\n          >\n            Props\n          </SideBarItem>\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"stateless-vs-stateful\"}\n            onClick={() => {\n              onSideBarItemClick(\"stateless-vs-stateful\");\n            }}\n          >\n            Stateless vs Stateful\n          </SideBarItem>\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"using-hooks\"}\n            onClick={() => onSideBarItemClick(\"using-hooks\")}\n          >\n            Using Hooks\n          </SideBarItem>\n          <SideBarItem\n            size=\"small\"\n            selected={sidebarSelected === \"props-and-hooks\"}\n            onClick={() => {\n              onSideBarItemClick(\"props-and-hooks\");\n            }}\n          >\n            Props and Hooks\n          </SideBarItem>\n        </SideBar>\n      )}\n    </StyledMain>\n  );\n};\n\nexport default FunctionComponent;\n"],"names":["sectionsID","USING_HOOKS","_jsxs","_Fragment","children","_jsx","Text","variant","List","ListItem","FunctionComponent","sidebarSelected","setSidebarSelected","React","isMounted","setIsMounted","width","useWindowSize","mobile","observer","IntersectionObserver","entries","entry","isIntersecting","target","id","threshold","rootMargin","map","document","getElementById","forEach","section","observe","disconnect","onSideBarItemClick","element","scrollIntoView","behavior","block","inline","StyledMain","StyledTopicContent","className","style","StyledSection","StyledSubsection","Breadcrumbs","size","color","delimiter","BreadcrumbsItem","title","link","marginTop","CodeDisplay","language","text","scrollMarginTop","SideBar","top","right","background","position","SideBarItem","selected","onClick"],"sourceRoot":""}