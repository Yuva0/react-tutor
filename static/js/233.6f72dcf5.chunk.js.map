{"version":3,"file":"static/js/233.6f72dcf5.chunk.js","mappings":"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","sources":["../node_modules/@tabler/icons-react/src/icons/IconExclamationCircleFilled.ts","content/ClassComponent.tsx"],"sourcesContent":["import createReactComponent from '../createReactComponent';\nexport default createReactComponent('filled', 'exclamation-circle-filled', 'IconExclamationCircleFilled', [[\"path\",{\"d\":\"M17 3.34a10 10 0 1 1 -15 8.66l.005 -.324a10 10 0 0 1 14.995 -8.336m-5 11.66a1 1 0 0 0 -1 1v.01a1 1 0 0 0 2 0v-.01a1 1 0 0 0 -1 -1m0 -7a1 1 0 0 0 -1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0 -1 -1\",\"key\":\"svg-0\"}]]);","import * as React from \"react\";\nimport {\n  Text,\n  CodeDisplay,\n  List,\n  ListItem,\n  Alert,\n  Breadcrumbs,\n  BreadcrumbsItem,\n  SideBar,\n  SideBarItem,\n} from \"stelios\";\nimport {\n  StyledMain,\n  StyledSection,\n  StyledSubsection,\n  StyledTopicContent,\n} from \"../components/StyledInternalComponents/StyledInternalComponents\";\nimport { IconExclamationCircleFilled } from \"@tabler/icons-react\";\nimport { useWindowSize } from \"../helpers/helpers\";\n\nconst sections = [\n  { id: \"introduction\", title: \"Introduction\" },\n  { id: \"basic-structure\", title: \"Basic Structure\" },\n  { id: \"state-management\", title: \"State Management\" },\n  { id: \"updating-state\", title: \"Updating State\" },\n  { id: \"lifecycle-methods\", title: \"Lifecycle Methods\" },\n];\n\nconst ALERT_TITLE = \"Do Not Use\";\nconst ALERT_DESCRIPTION = (\n  <>\n    <Text noColor size=\"small\">\n      React recommends not to use class components. Please use function\n      components instead.\n    </Text>\n    <Text noColor size=\"small\">\n      Before React 16.8, class components were the only way to create components\n      with state and lifecycle methods. <br /> With the introduction of hooks,\n      function components can now have state and lifecycle methods, making class\n      components obsolete.\n    </Text>\n  </>\n);\n\nconst INTRODUCTION_CONTENT = `A class component in React is a fundamental way to define components using ES6 class syntax. These components are more feature-rich compared to functional components, particularly before the introduction of hooks. Class components extend the React.Component base class, giving them access to various built-in features, such as state management and lifecycle methods.`;\n\nconst BASIC_STRUCTURE_CONTENT =\n  \"A class component is defined by a class that extends React.Component. The class must have a render method that returns the component's UI.\";\nconst BASIC_STRUCTURE_EXAMPLE = `import React, { Component } from 'react';\n\nclass MyComponent extends Component {\n  // Initializing state\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: 'Hello, World!'\n    };\n  }\n\n  // Required render method\n  render() {\n    return (\n      <div>\n        <h1>{this.state.message}</h1>\n        <p>This is a basic class component.</p>\n      </div>\n    );\n  }\n}\n\nexport default MyComponent;\n`;\n\nconst EXPLANATION_1 = `import React, { Component } from 'react';`;\nconst EXPLANATION_2 = `class MyComponent extends Component {`;\nconst EXPLANATION_3 = `constructor(props) {\n  super(props);\n  this.state = {\n    message: 'Hello, World!'\n  };\n}`;\n\nconst INITIALIZATION_EXAMPLE = `import React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n  render() {\n    return <h1>{this.state.count}</h1>;\n  }\n\n}`;\n\nconst UPDATING_EXAMPLE = `import React, { Component } from 'react';\n              \nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  increment = () {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Count: {this.state.count}</p>\n        <button onClick={this.increment}>Increment</button>\n      </div>\n    );\n  }\n}`;\n\nconst ClassComponent = () => {\n  const [sidebarSelected, setSidebarSelected] = React.useState(\"introduction\");\n  const [isMounted, setIsMounted] = React.useState(false);\n  const { width } = useWindowSize();\n  const mobile = width < 1200;\n\n  React.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  React.useEffect(() => {\n    const handleIntersection = (entries: IntersectionObserverEntry[]) => {\n      for (const entry of entries) {\n        if (entry.isIntersecting) {\n          setSidebarSelected(entry.target.id);\n          break;\n        }\n      }\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 1,\n      rootMargin: \"64px\",\n    });\n\n    const _sections = sections.map((section) =>\n      document.getElementById(section.id)\n    );\n    _sections.forEach((section) => {\n      if (!section) return;\n      return observer.observe(section);\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  });\n\n  const onSideBarItemClick = (id: string) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    }\n  };\n\n  if (!isMounted) return <StyledMain>{null}</StyledMain>;\n\n  return (\n    <StyledMain>\n      <StyledTopicContent\n        className={isMounted ? \"fade-in\" : \"\"}\n        style={{ width: mobile ? \"100%\" : \"calc(100% - 12rem\" }}\n      >\n        <StyledSection id=\"introduction\">\n          <StyledSubsection>\n            <Breadcrumbs size=\"small\" color=\"primary\" delimiter=\"/\">\n              <BreadcrumbsItem title=\"Components\" />\n              <BreadcrumbsItem\n                link=\"/components/class-component\"\n                title=\"Class Component\"\n              />\n            </Breadcrumbs>\n            <Alert\n              color=\"danger\"\n              titleIcon={<IconExclamationCircleFilled />}\n              title={ALERT_TITLE}\n              description={ALERT_DESCRIPTION}\n              style={{ marginTop: \"1rem\" }}\n            ></Alert>\n          </StyledSubsection>\n          <StyledSubsection>\n            <Text size=\"large\">Introduction</Text>\n            <Text variant=\"paragraph\">{INTRODUCTION_CONTENT}</Text>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection id=\"basic-structure\">\n          <StyledSubsection>\n            <Text variant=\"paragraph\" size=\"large\">\n              Basic Structure\n            </Text>\n            <Text variant=\"paragraph\">{BASIC_STRUCTURE_CONTENT}</Text>\n            <Text variant=\"paragraph\" id=\"example\">\n              Example\n            </Text>\n            <CodeDisplay language=\"JSX\" text={BASIC_STRUCTURE_EXAMPLE} />\n          </StyledSubsection>\n          <StyledSubsection>\n            <Text variant=\"paragraph\">Explanation</Text>\n            <List>\n              <ListItem>\n                Importing React and Component:\n                <CodeDisplay\n                  style={{ margin: \"0.75rem 0 0.75rem 0\" }}\n                  language=\"JSX\"\n                  text={EXPLANATION_1}\n                />\n                <Text>\n                  This line imports React and the Component class from the React\n                  library.\n                </Text>\n              </ListItem>\n              <ListItem>\n                Defining the Class Component:\n                <CodeDisplay\n                  style={{ margin: \"0.75rem 0 1rem 0\" }}\n                  language=\"JSX\"\n                  text={EXPLANATION_2}\n                />\n                <Text>\n                  This defines a new class component named MyComponent that\n                  extends React.Component.\n                </Text>\n              </ListItem>\n              <ListItem>\n                Constructor and State Initialization:\n                <CodeDisplay\n                  style={{ margin: \"0.75rem 0 1rem 0\" }}\n                  language=\"JSX\"\n                  text={EXPLANATION_3}\n                />\n                <Text>\n                  The constructor is used to initialize the component's state.\n                  Here, the state contains a single property message.\n                </Text>\n              </ListItem>\n            </List>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection id=\"state-management\">\n          <StyledSubsection>\n            <Text size=\"large\">State Management</Text>\n            <Text variant=\"paragraph\" size=\"large\">\n              Initializing State\n            </Text>\n            <Text variant=\"paragraph\">\n              State in a class component is typically initialized in the\n              constructor.\n            </Text>\n            <Text variant=\"paragraph\">Example</Text>\n            <CodeDisplay language=\"JSX\" text={INITIALIZATION_EXAMPLE} />\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection id=\"updating-state\">\n          <StyledSubsection style={{ marginTop: \"0.5rem\" }}>\n            <Text variant=\"paragraph\" size=\"large\">\n              Updating State\n            </Text>\n            <Text variant=\"paragraph\">\n              State is updated using the setState method, which merges the new\n              state with the current state and triggers a re-render.\n            </Text>\n            <Text variant=\"paragraph\">Example</Text>\n            <CodeDisplay language=\"JSX\" text={UPDATING_EXAMPLE} />\n            <List title=\"Explanation\">\n              <ListItem>\n                <Text>Increment Method:</Text>\n                <Text style={{ marginTop: \"0.25rem\" }}>\n                  The increment method is called when the button is clicked. It\n                  updates the count state by incrementing it by 1.\n                </Text>\n              </ListItem>\n              <ListItem style={{ marginTop: \"0.5rem\" }}>\n                <Text>Button Element:</Text>\n                <Text style={{ marginTop: \"0.25rem\" }}>\n                  The button element has an onClick event handler that calls the\n                  increment method when clicked.\n                </Text>\n              </ListItem>\n            </List>\n          </StyledSubsection>\n        </StyledSection>\n        <StyledSection id=\"lifecycle-methods\">\n          <List\n            title={\n              <Text variant=\"paragraph\" size=\"large\">\n                Lifecycle Methods\n              </Text>\n            }\n          >\n            <ListItem>\n              <Text variant=\"paragraph\">Mounting</Text>\n              <Text variant=\"paragraph\" style={{ marginTop: \"0.25rem\" }}>\n                These methods are called when an instance of a component is\n                being created and inserted into the DOM.\n              </Text>\n            </ListItem>\n\n            <ListItem style={{ marginTop: \"0.5rem\" }}>\n              <Text variant=\"paragraph\">Updating</Text>\n              <Text variant=\"paragraph\" style={{ marginTop: \"0.25rem\" }}>\n                These methods are called when a component is being re-rendered.\n              </Text>\n            </ListItem>\n\n            <ListItem style={{ marginTop: \"0.5rem\" }}>\n              <Text variant=\"paragraph\">Unmounting</Text>\n              <Text variant=\"paragraph\" style={{ marginTop: \"0.25rem\" }}>\n                This method is called when a component is being removed from the\n                DOM.\n              </Text>\n            </ListItem>\n          </List>\n        </StyledSection>\n      </StyledTopicContent>\n      {!mobile && (\n        <SideBar top=\"6rem\" right=\"4rem\">\n          {sections.map((section) => (\n            <SideBarItem\n              size=\"small\"\n              key={section.id}\n              selected={sidebarSelected === section.id}\n              onClick={() => onSideBarItemClick(section.id)}\n            >\n              {section.title}\n            </SideBarItem>\n          ))}\n        </SideBar>\n      )}\n    </StyledMain>\n  );\n};\n\nexport default ClassComponent;\n"],"names":["IconExclamationCircleFilled","createReactComponent","sections","id","title","ALERT_DESCRIPTION","_jsxs","_Fragment","children","_jsx","Text","noColor","size","ClassComponent","sidebarSelected","setSidebarSelected","React","isMounted","setIsMounted","width","useWindowSize","mobile","observer","IntersectionObserver","entries","entry","isIntersecting","target","threshold","rootMargin","map","section","document","getElementById","forEach","observe","disconnect","StyledMain","StyledTopicContent","className","style","StyledSection","StyledSubsection","Breadcrumbs","color","delimiter","BreadcrumbsItem","link","Alert","titleIcon","description","marginTop","variant","CodeDisplay","language","text","List","ListItem","margin","SideBar","top","right","SideBarItem","selected","onClick","element","scrollIntoView","behavior","block","inline","onSideBarItemClick"],"sourceRoot":""}